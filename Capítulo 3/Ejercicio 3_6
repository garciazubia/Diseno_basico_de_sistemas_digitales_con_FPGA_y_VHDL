## Ejemplo 3.6. Se desean controlar dos bombas B1 y B2 en función de la cantidad de agua en un depósito. Los sensores B (nivel bajo de agua) y A (nivel alto de agua) entregan un uno lógico cuando el agua supera dicho nivel. Los sensores TB1 y TB2 indican mediante un uno si la temperatura de las bombas B1 y B2 ha superado el límite de funcionamiento. Si el nivel se encuentra:
# •	por debajo de B se deben activar las dos bombas;
# •	por encima de B pero por debajo de A se debe activar una bomba, preferiblemente B1 (teniendo en cuenta su temperatura);
# •	por encima de A se deben desactivar B1 y B2;
# •	si la temperatura del motor superara el límite, éste debería pararse.
# Cualquier situación anómala en los valores de los sensores conllevará la parada de ambas bombas por seguridad.
# TESTED

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
--use IEEE.STD_LOGIC_SIGNED.ALL;
use IEEE.numeric_std.all;

entity base is
	Port (
		G_CLOCK_50 : in std_logic;
		V_SW : in std_logic_vector (9 downto 0);
		V_BT:  in std_logic_vector (3 downto 0);
		G_LED : out std_logic_vector (9 downto 0);
		G_HEX0 : out std_logic_vector (0 to 6);
		G_HEX1 : out std_logic_vector (0 to 6);
		G_HEX2 : out std_logic_vector (0 to 6);
		G_HEX3 : out std_logic_vector (0 to 6);
		G_HEX4 : out std_logic_vector (0 to 6);
		G_HEX5 : out std_logic_vector (0 to 6)
		);
end base;

architecture behavioral of base is
--aqui comienzan las signals
signal sensor_alto: std_logic;
signal sensor_bajo: std_logic;
signal tb1: std_logic;
signal tb2: std_logic;
signal b1: std_logic;
signal b2: std_logic;
--aqui acaban

begin
--asignación de signals, entradas y salidas
sensor_alto<=v_sw(3);
sensor_bajo<=v_sw(2);
tb1<=v_sw(1);
tb2<=v_sw(0);
g_led(1)<=b1;
g_led(0)<=b2;
--fin de asignación de signals, entradas y salidas

process(sensor_bajo, sensor_alto, tb1, tb2)
begin
if (sensor_bajo='0' and sensor_alto='0' and tb1='0' and tb2='0') then
    b1<='1';
    b2<='1';
elsif ((sensor_bajo='1' and sensor_alto='0' and tb1='0') or
        (sensor_bajo='0' and sensor_alto='0' and tb2='1')) then
    b1<='1';
    b2<='0';
elsif ((sensor_bajo='1' and sensor_alto='0' and tb1='1' and tb2='0') or
        (sensor_bajo='0' and sensor_alto='0' and tb1='1')) then
    b1<='0';
    b2<='1';
else
    b1<='0';
    b2<='0';
end if;
end process;

end Behavioral;
