# Ejemplo 3.11. Demultiplexor: de 1 entrada a 4 salidas, la única entrada va a una y sola a una de las salidas, 
# aquella cuya posición coincide con el valor expresado en binario puro en las 2 líneas de control.
# TESTED

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
--use IEEE.STD_LOGIC_SIGNED.ALL;
use IEEE.numeric_std.all;

entity base is
	Port (
		G_CLOCK_50 : in std_logic;
		V_SW : in std_logic_vector (9 downto 0);
		V_BT:  in std_logic_vector (3 downto 0);
		G_LED : out std_logic_vector (9 downto 0);
		G_HEX0 : out std_logic_vector (0 to 6);
		G_HEX1 : out std_logic_vector (0 to 6);
		G_HEX2 : out std_logic_vector (0 to 6);
		G_HEX3 : out std_logic_vector (0 to 6);
		G_HEX4 : out std_logic_vector (0 to 6);
		G_HEX5 : out std_logic_vector (0 to 6)
		);
end base;

architecture behavioral of base is
--aqui comienzan las signals
signal entrada: std_logic;
signal control: std_logic_vector(1 downto 0);
signal salida: std_logic_vector (3 downto 0);
--aqui acaban

begin
--asignación de signals, entradas y salidas
entrada<=v_sw(0);
control<=v_sw(9 downto 8);
g_led(3 downto 0)<=salida;
--fin de asignación de signals, entradas y salidas

process(control, entrada)
begin
case control is
when "00" => salida<="ZZZ"&entrada;
when "01" => salida<="ZZ"&entrada&'Z';
when "10" => salida<='Z'&entrada&"ZZ";
when "11" => salida<=entrada&"ZZZ";
when others => salida<="ZZZZ";
end case;
end process;

end Behavioral;
