# Ejemplo 4.10. Registro serie-serie de 4 bits, registro de desplazamiento a la derecha. 

# TESTED

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
--use IEEE.STD_LOGIC_SIGNED.ALL;
use IEEE.numeric_std.all;

entity base is
	Port (
		G_CLOCK_50 : in std_logic;
		V_SW : in std_logic_vector (9 downto 0);
		V_BT:  in std_logic_vector (3 downto 0);
		G_LED : out std_logic_vector (9 downto 0);
		G_HEX0 : out std_logic_vector (6 downto 0);
		G_HEX1 : out std_logic_vector (6 downto 0);
		G_HEX2 : out std_logic_vector (6 downto 0);
		G_HEX3 : out std_logic_vector (6 downto 0);
		G_HEX4 : out std_logic_vector (6 downto 0);
		G_HEX5 : out std_logic_vector (6 downto 0)
		);
end base;

architecture behavioral of base is
signal entrada: std_logic;
signal salida: std_logic;
signal registro: std_logic_vector (3 downto 0) :="0000";
signal clk: std_logic; 
signal clear: std_logic;
--aqui acaban

begin
--asignación de signals, entradas y salidas
entrada<=v_sw(0);
g_led(0)<=salida;
clk<=G_CLOCK_50;
clear<=not(v_bt(0));
--fin de asignación de signals, entradas y salidas

--comienzan los process
process(clear, clk)
begin
if clear='1' then
    registro<="0000";
elsif rising_edge(clk) then
    registro<=entrada&registro(3 downto 1);
end if;
end process;
salida<=registro(0);

end Behavioral;
