# Ejercicio 4.2.1. Diseña un semáforo que genere la secuencia verde-amarillo-rojo cada 6-1-3 segundos respectivamente. Opción 2. 

# TESTED

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
--use IEEE.STD_LOGIC_SIGNED.ALL;
use IEEE.numeric_std.all;

entity base is
	Port (
		G_CLOCK_50 : in std_logic;
		V_SW : in std_logic_vector (9 downto 0);
		V_BT:  in std_logic_vector (3 downto 0);
		G_LED : out std_logic_vector (9 downto 0);
		G_HEX0 : out std_logic_vector (6 downto 0);
		G_HEX1 : out std_logic_vector (6 downto 0);
		G_HEX2 : out std_logic_vector (6 downto 0);
		G_HEX3 : out std_logic_vector (6 downto 0);
		G_HEX4 : out std_logic_vector (6 downto 0);
		G_HEX5 : out std_logic_vector (6 downto 0)
		);
end base;

architecture behavioral of base is
--aqui comienzan las signals
signal clk: std_logic;
signal inicio: std_logic;
signal contador_flancos: integer range 0 to 500000000;
signal registro: std_logic_vector (2 downto 0) := "100";
signal verde: std_logic;
signal amarillo: std_logic;
signal rojo: std_logic;
--aqui acaban

begin
--asignación de signals, entradas y salidas
Clk<=G_CLOCK_50;
clear <= not(v_bt(0));
g_led(9) <= verde;
g_led(5) <= amarillo;
g_led(0) <= rojo;
--fin de asignación de signals, entradas y salidas

--comienzan los process
process(G_CLOCK_50, inicio)
begin
if inicio = '1' then
    contador_flancos <= 0;
elsif rising_edge(G_CLOCK_50) then
    if contador_flancos = 500000000-1 then
        contador_flancos <= 0;
    else
        contador_flancos <= contador_flancos + 1;
    end if;
end if;
end process;

process(G_CLOCK_50, inicio)
begin
if inicio = '1' then
    registro <= "100";
elsif rising_edge(G_CLOCK_50) then
    if contador_flancos = 300000000 then
        registro <= registro(0)&registro(2 downto 1);
    elsif contador_flancos = 350000000  then
        registro <= registro(0)&registro(2 downto 1);
    elsif contador_flancos = 500000000-1 then
        registro <= registro(0)&registro(2 downto 1);
    end if;
end if;
end process;

verde <= registro(2);
amarillo <= registro(1);
rojo <= registro(0);

end behavioral;
