# Ejemplo 4.25. Control mediante PWM de 200 Hz. 

# TESTED

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
--use IEEE.STD_LOGIC_SIGNED.ALL;
use IEEE.numeric_std.all;

entity base is
	Port (
		G_CLOCK_50 : in std_logic;
		V_SW : in std_logic_vector (9 downto 0);
		V_BT:  in std_logic_vector (3 downto 0);
		G_LED : out std_logic_vector (9 downto 0);
		G_HEX0 : out std_logic_vector (6 downto 0);
		G_HEX1 : out std_logic_vector (6 downto 0);
		G_HEX2 : out std_logic_vector (6 downto 0);
		G_HEX3 : out std_logic_vector (6 downto 0);
		G_HEX4 : out std_logic_vector (6 downto 0);
		G_HEX5 : out std_logic_vector (6 downto 0)
		);
end base;

architecture behavioral of base is
--aqui comienzan las signals
signal clear: std_logic;
signal clk: std_logic;
signal porcentaje_pwm: std_logic_vector (3 downto 0);
signal porcentaje_pwm_entero: integer range 0 to 10;
signal cont_pwm: integer range 0 to 250000;
signal tope_pwm_1: integer range 0 to 250000;
signal pwm: std_logic;
--aqui acaban

begin
--asignación de signals, entradas y salidas
clear<=not(v_bt(0));
clk<=G_CLOCK_50; --se debe elegir un solo clk
g_led(0)<=pwm;
--fin de asignación de signals, entradas y salidas

--comienzan los process
porcentaje_pwm_entero<=to_integer(unsigned(porcentaje_pwm));
tope_pwm_1 <=(250000*(porcentaje_pwm_entero*10))/100;

process(clk, clear)
begin
if clear = '1' then
    cont_pwm<=0;
elsif rising_edge(clk) then
    if cont_pwm = 250000-1 then
        cont_pwm<= 0;
    else    
        cont_pwm<=cont_pwm + 1;
    end if;
end if;
end process;

process(cont_pwm)
begin
if cont_pwm<tope_pwm_1 then
    pwm<='1';
else    
    pwm<='0';
end if;
end process;

end Behavioral;
