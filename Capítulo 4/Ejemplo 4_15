# Ejemplo 4.15. Contador módulo 16, 0000-1111. 

# TESTED

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
--use IEEE.STD_LOGIC_SIGNED.ALL;
use IEEE.numeric_std.all;

entity base is
	Port (
		G_CLOCK_50 : in std_logic;
		V_SW : in std_logic_vector (9 downto 0);
		V_BT:  in std_logic_vector (3 downto 0);
		G_LED : out std_logic_vector (9 downto 0);
		G_HEX0 : out std_logic_vector (6 downto 0);
		G_HEX1 : out std_logic_vector (6 downto 0);
		G_HEX2 : out std_logic_vector (6 downto 0);
		G_HEX3 : out std_logic_vector (6 downto 0);
		G_HEX4 : out std_logic_vector (6 downto 0);
		G_HEX5 : out std_logic_vector (6 downto 0)
		);
end base;

architecture behavioral of base is

--aqui comienzan las signals
signal clk: std_logic;
signal contador: integer range 0 to 15 :=0;
-- aquí acaban

begin
--asignación de signals, entradas y salidas
--clk<=G_CLOCK_50; --se debe elegir un solo clk
clk<=not(v_bt(3));
g_led(3 downto 0)<=std_logic_vector(to_unsigned(contador,4));
--fin de asignación de signals, entradas y salidas

process(clk)
begin
if rising_edge(clk) then 
    contador<=contador+1;
end if;
end process;

end behavioral;
